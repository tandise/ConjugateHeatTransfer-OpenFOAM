/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | foam-extend: Open Source CFD                    |
|  \\    /   O peration     | Version:     4.0                                |
|   \\  /    A nd           | Web:         http://www.foam-extend.org         |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

convertToMeters 1;

vertices
(
    ( 0 0 0)
    (1 0 0)
    (1 1 0)
    ( 0 1 0)
    ( 0 0 0.1)
    (1 0 0.1)
    (1 1 0.1)
    ( 0 1 0.1)
);

blocks
(
    hex (0 1 2 3 4 5 6 7) (80 80 1) simpleGrading (1 1 1)
);

edges
(
);

boundary
(
    topWall
    {
        type 		directMappedWall;        
        sampleMode      nearestPatchFace;
        sampleRegion    solidT;
        samplePatch     bottom;
        offset          (0 0 0);
        zone            topWallZone;
        master          on;
        bridgeOverlap   off;   
        faces
        (
            (3 7 6 2)
        );
    }
    left
    {
        type 		directMappedWall;        
        sampleMode      nearestPatchFace;
        sampleRegion    solidL;
        samplePatch     right;
        offset          (0 0 0);
        zone            leftZone;
        master          on;
        bridgeOverlap   off;   
        faces
        (
            (0 4 7 3)
        );
    }
    right
    {
        type 		directMappedWall;        
        sampleMode      nearestPatchFace;
        sampleRegion    solidR;
        samplePatch     left;
        offset          (0 0 0);
        zone            rightZone;
        master          on;
        bridgeOverlap   off;   
        faces
        (
            (2 6 5 1)
        );
    }
    bottomWall
    {
        type wall;
        faces
        (
            (1 5 4 0)
        );
    }
    frontAndBack
    {
        type empty;
        faces
        (
            (0 3 2 1)
            (4 5 6 7)
        );
    }
);

mergePatchPairs
(
);


// ************************************************************************* //
